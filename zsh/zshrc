# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Suppress the warning message
typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

# Theme
source ~/.config/zsh/plugins/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Environment Setup
export EDITOR=$(which nvim >/dev/null && echo "nvim" || echo "vim")
[[ $EDITOR == "nvim" ]] && alias vim="nvim"
[[ $(which codium) ]] && alias code="codium"

# ZSH Configuration
alias zfig="$EDITOR ~/.zshrc"
alias zfresh="source ~/.zshrc"

# Navigation
alias dev="cd ~/Developer && ls -lah"
alias src="cd ~/Developer/src && ls -lah"
alias dots="cd ~/Developer/src/dots && ls -lah"
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias -- -="cd -"

# Common Commands
alias dir="ls -lah"
alias ll="ls -lah"
alias la="ls -la"
alias c="clear"
alias cls="clear"
alias claer="clear"

# Safety Aliases
alias rm="rm -iv"
alias cp="cp -iv"
alias mv="mv -iv"
alias mkdir="mkdir -pv"

# Python Virtual Environment
alias activate="source ./venv/bin/activate"
mkvenv() { [[ ! -d "./venv" ]] && python -m venv venv; }

# Load Custom Host Configurations
[[ -f "$HOME/.config/zsh/hosts" ]] && source "$HOME/.config/zsh/hosts"

# ZSH Plugins
source ~/.config/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh
source ~/.config/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh

# Development Environment Managers
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && source "$NVM_DIR/bash_completion"

# OS Specific Configurations
if [[ $(uname) == "Linux" ]]; then
    path+=/home/pi/.local/bin

    # Run updates
    alias up="sudo apt update -y && sudo apt upgrade -y && sudo apt autoremove -y"
fi

if [[ $(uname) == "Darwin" ]]; then
    # File visibility
    show() { defaults write com.apple.Finder AppleShowAllFiles true; killall Finder; }
    hide() { defaults write com.apple.Finder AppleShowAllFiles false; killall Finder; }
    
    # Enhanced man pages
    manp() { man -t "$@" | open -f -a "Preview"; }
    manx() { open x-man-page://$@; }

    # Power management
    power() {
        # Get connected charger info
        powerAdapter=$(system_profiler SPPowerDataType | grep "Power Adapter" | awk '{print $2}')
        wattage=$(system_profiler SPPowerDataType | grep "Wattage" | awk '{print $3}')

        # Show charger info if connected
        if [[ -z $powerAdapter && -z $wattage ]]; then
            echo "No power adapter connected."
        else
            [[ -n $powerAdapter ]] && echo $powerAdapter
            [[ -n $wattage ]] && echo "${wattage}W"
        fi
    }

    # TODO: Fix zsh-autocomplete for Raspberry Pi
    source ~/.config/zsh/plugins/zsh-autocomplete/zsh-autocomplete.plugin.zsh
fi

# TMUX Session Management
if command -v tmux &> /dev/null; then
    # Create alias for manual TMUX start in IDEs
    alias sesh="tmux new-session -A -s sesh"
    alias t="tmux new-session -A -s sesh"
    
    # Auto-start TMUX only in regular terminal
    # This function will be called after zsh initialization is complete
    _start_tmux_after_init() {
        # Only run this function once
        add-zsh-hook -d precmd _start_tmux_after_init
        
        # Only try to start tmux if we're not already in a tmux session
        if [[ -z "$TMUX" && -n "$PS1" && \
              ! "$TERM" = *screen* && \
              ! "$TERM" = *tmux* && \
              "$TERM_PROGRAM" != "vscode" && \
              "$TERM_PROGRAM" != "cursor" ]]; then
            # Start tmux without producing output
            tmux new-session -A -s sesh >/dev/null 2>&1 || true
        fi
    }
    
    # Register the function to run after zsh initialization
    autoload -Uz add-zsh-hook
    add-zsh-hook precmd _start_tmux_after_init
fi
